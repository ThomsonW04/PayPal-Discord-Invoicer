from controllers.DataBaseController import DataBaseContoller
from controllers.PayPalInvoiceController import PayPalInvoiceController
from dotenv import load_dotenv
import os
import discord
from discord.ext import commands
from discord import app_commands, Intents, Interaction

load_dotenv()

class PayPalHandler:
    def __init__(self):
        self.database = DataBaseContoller()
        self.invoice_manager = PayPalInvoiceController(client_id = os.getenv("PAYPAL_CLIENT_ID"), 
                                                       client_secret = os.getenv("PAYPAL_CLIENT_SECRET"), 
                                                       vendor_given_names = os.getenv("VENDOR_GIVEN_NAMES"), 
                                                       vendor_last_names = os.getenv("VENDOR_LAST_NAMES"), 
                                                       vendor_email = os.getenv("VENDOR_EMAIL"), 
                                                       invoice_prefix = os.getenv("INVOICE_PREFIX"), 
                                                       currency_code = os.getenv("CURRENCY_CODE"),
                                                       dev_mode = os.getenv("DEV_MODE"))

    def create_local_invoice(self):
        last_tag = self.database.get_last_created_invoice()
        if last_tag is None:
            new_tag = 1
        else:
            new_tag = last_tag[0] + 1
        self.database.insert_new_invoice(new_tag)
        return new_tag

    def create_draft_invoice(self, invoice_tag, note, customer_email, item):
        response = self.invoice_manager.create_invoice(invoice_tag, note, customer_email, item)
        if response.status_code == 201:
            self.database.set_paypal_invoice_id(response.json()['id'], invoice_tag)
            return response.json()
        else:
            self.database.delete_invoice(invoice_tag)
            return response.json()
        
    def send_invoice(self, invoice_id):
        return self.invoice_manager.send_invoice(invoice_id).json()
    
    def get_invoice_information(self, invoice_id):
        return self.invoice_manager.get_invoice_details(invoice_id).json()
    
    def get_paypal_id_from_local_id(self, local_id):
        return self.database.get_paypal_id_from_local_id(local_id)[0]
    
class DiscordBot(commands.Bot):
    def __init__(self):
        super().__init__(intents=Intents.default(), help_command=None, command_prefix=None)
        self.MAIN_GUILD = discord.Object(os.getenv("GUILD_ID"))
    
def main():
    bot = DiscordBot()
    paypal = PayPalHandler()

    @bot.event
    async def on_ready():
        print(f"Bot is online as {bot.user}!")
        await bot.tree.sync(guild=bot.MAIN_GUILD)

    @bot.tree.command(name="create_invoice", description="Generate a PayPal invoice.", guild=bot.MAIN_GUILD)
    @app_commands.describe(email="The email of the account holder to send an invoice to", item_name="Name of the item", item_price="Price of the item (e.g. 3.49, 50.00, 1.99)", note="Optional note to the customer")
    async def create_invoice(interaction: Interaction, email: str, item_name: str, item_price: float, note: str = "Thank you for being an amazing customer!"):
        await interaction.response.defer(thinking=True)

        local_tag = paypal.create_local_invoice()
        invoice_data = paypal.create_draft_invoice(
            local_tag, note, email, {"name": item_name, "value": item_price}
        )

        invoice_id = invoice_data.get("id")
        response = paypal.send_invoice(invoice_id)
        invoice_url = response.get("href", "https://www.paypal.com/invoice")

        embed = discord.Embed(
            title="ðŸ’¸ PayPal Invoice Created",
            description=(
                f"An invoice has been generated for **{email}**\n"
                f"**Item:** {item_name}\n"
                f"**Amount:** `{item_price:.2f} {os.getenv('CURRENCY_CODE')}`"
            ),
            color=discord.Color.from_str("#0070BA")
        )

        embed.add_field(
            name="Invoice Details",
            value=(
                f"**PayPal ID:** `{invoice_id}`\n"
                f"**Local Tag:** `{os.getenv('INVOICE_PREFIX')}{local_tag}`"
            ),
            inline=False
        )

        embed.add_field(
            name="ðŸ“„ View Invoice",
            value=f"[Click here to view on PayPal]({invoice_url})",
            inline=False
        )

        embed.set_footer(text=f"Generated by {interaction.user.display_name}")
        embed.set_thumbnail(url="https://www.paypalobjects.com/webstatic/icon/pp258.png")

        await interaction.followup.send(embed=embed)

    @bot.tree.command(name="check_invoice", description="Get PayPal invoice information.", guild=bot.MAIN_GUILD)
    @app_commands.describe(invoice_id="Either the PayPal ID or Local ID")
    async def check_invoice(interaction: Interaction, invoice_id: str):
        await interaction.response.defer(thinking=True)

        if invoice_id.startswith(os.getenv("INVOICE_PREFIX")):
            invoice_id = paypal.get_paypal_id_from_local_id(
                invoice_id.removeprefix(os.getenv("INVOICE_PREFIX"))
            )

        response = paypal.get_invoice_information(invoice_id)

        status = response.get("status", "UNKNOWN").upper()
        details = response.get("detail", {})
        recipient = (
            response.get("primary_recipients", [{}])[0]
            .get('billing_info')
            .get("email_address", "N/A")
        )
        amount = response.get("amount", {}).get("value", "0.00")
        currency = response.get("amount", {}).get("currency_code", os.getenv("CURRENCY_CODE"))
        item_list = response.get("items", [])
        item_names = ", ".join([item.get("name", "Unnamed Item") for item in item_list])

        if status == "PAID":
            display_status = "Paid"
            color = discord.Color.green()
        elif status == "PARTIALLY_PAID":
            display_status = "Partially Paid"
            color = discord.Color.orange()
        else:
            display_status = "Not Paid"
            color = discord.Color.red()

        metadata = details.get("metadata", {})
        invoice_url = metadata.get(
            "recipient_view_url",
            metadata.get("invoicer_view_url", "https://www.paypal.com/invoice")
        )

        embed = discord.Embed(
            title=f"ðŸ“„ Invoice {display_status}",
            description=(
                f"**PayPal ID:** `{invoice_id}`\n"
                f"**Recipient:** {recipient}\n"
                f"**Items:** {item_names}\n"
                f"**Amount:** `{amount} {currency}`"
            ),
            color=color
        )

        embed.add_field(
            name="ðŸ”— View on PayPal",
            value=f"[Click here to open invoice]({invoice_url})",
            inline=False
        )

        embed.set_footer(text=f"Checked by {interaction.user.display_name}")
        embed.set_thumbnail(url="https://www.paypalobjects.com/webstatic/icon/pp258.png")

        await interaction.followup.send(embed=embed)

    
    bot.run(os.getenv('DISCORD_BOT_TOKEN'))

if __name__ == "__main__":
    main()